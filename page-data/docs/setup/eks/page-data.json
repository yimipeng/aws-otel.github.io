{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/setup/eks",
    "result": {"data":{"mdx":{"id":"fb5b333c-de8b-539d-a5c3-91f96462d970","excerpt":"In this tutorial, we will demonstrate how to run the AWS Distro for OpenTelemetry(ADOT Collector) Collector as\nsidecar on the Amazon Elastic Kubernetes Serviceâ€¦","fields":{"slug":"/docs/setup/eks/"},"frontmatter":{"title":"Setting up AWS Distro for OpenTelemetry Collector in Amazon Elastic Kubernetes Service","description":"In this tutorial, we will demonstrate how to run the AWS Distro for OpenTelemetry(ADOT Collector) Collector as sidecar on the Amazon Elastic Kubernetes Service (Amazon EKS). Sidecar is a microservices design pattern where a companion service runs next to your primary microservice, augmenting its abilities or intercepting resources it is utilizing. We recommend deploying ADOT Collector on Amazon EKS as a sidecar, defining it in the same task definition as your application.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setting up AWS Distro for OpenTelemetry Collector in Amazon Elastic Kubernetes Service\",\n  \"description\": \"In this tutorial, we will demonstrate how to run the AWS Distro for OpenTelemetry(ADOT Collector) Collector as sidecar on the Amazon Elastic Kubernetes Service (Amazon EKS). Sidecar is a microservices design pattern where a companion service runs next to your primary microservice, augmenting its abilities or intercepting resources it is utilizing. We recommend deploying ADOT Collector on Amazon EKS as a sidecar, defining it in the same task definition as your application.\",\n  \"path\": \"/docs/setup/eks\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial, we will demonstrate how to run the AWS Distro for OpenTelemetry(ADOT Collector) Collector as\\nsidecar on the Amazon Elastic Kubernetes Service (Amazon EKS).\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"create-iam-policy\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-iam-policy\",\n    \"aria-label\": \"create iam policy permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create IAM policy\"), mdx(\"p\", null, \"For the required permissions and setup,\\nsee the \", mdx(Link, {\n    to: \"/docs/setup/permissions\",\n    mdxType: \"Link\"\n  }, \"Permissions\"), \" section.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"attach-the-eks-awsobservability-iam-policy-to-worker-node\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#attach-the-eks-awsobservability-iam-policy-to-worker-node\",\n    \"aria-label\": \"attach the eks awsobservability iam policy to worker node permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Attach the EKS-AWSObservability IAM Policy to worker node\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://console.aws.amazon.com/ec2/\"\n  }, \"Amazon EC2 console\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Select one of the worker node instances and choose the IAM role in the description.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On the IAM role page, choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Attach policies\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the list of policies, select the check box next to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWSDistroOpenTelemetryPolicy\"), \". You can use the search box to find this policy.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Attach policies\"), \".\")), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"deploy-adot-collector-on-amazon-eks-as-sidecar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deploy-adot-collector-on-amazon-eks-as-sidecar\",\n    \"aria-label\": \"deploy adot collector on amazon eks as sidecar permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy ADOT Collector on Amazon EKS as sidecar\"), mdx(\"p\", null, \"Sidecar is a microservice design pattern where a companion service runs next to your primary microservice, augmenting its\\nabilities or intercepting resources it is utilizing. We recommend deploying ADOT Collector on Amazon EKS as a sidecar,\\ndefining it in the same task definition as your application. This allows the ADOT Collector to collect the metric and\\ntrace data for the application.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a Kubernetes namespace.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kubectl create namespace aws-otel-eks\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An example configuration template can be\\nfound \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector/blob/main/examples/eks/aws-cloudwatch/otel-sidecar.yaml\"\n  }, \"under examples in the AWS Distro for OpenTelemetry Collector GitHub\"), \".\\nReplace \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{{aws-otelImage}}\"), \" with the name of the ADOT Collector Docker image you built\\n(For example, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aottestbed/awscollector:v0.1.12\"), \"), and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{{region}}\"), \" with the name of the Region where the logs are published (For example, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"us-west-2\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Deploy the application.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kubectl apply -f https://raw.githubusercontent.com/aws-observability/aws-otel-collector/main/examples/eks/aws-cloudwatch/otel-sidecar.yaml\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"View the resources in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aws-otel-eks\"), \" namespace.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kubectl get all -n aws-otel-eks\\n\")), mdx(\"img\", {\n    src: img11,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), \"5. View the details of the deployed deployment. ``` kubectl -n aws-otel-eks describe deployment aws-otel-eks-sidecar ```\", mdx(\"img\", {\n    src: img12,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), \"The example template runs the AWS-OTel-Collector as a sidecar to send application metrics and traces on Amazon EKS. We run two applications: the main application (`aws-otel-emitter`) and the ADOT Collector (`aws-otel-collector`). After the setup is finished, we should see the following sample metrics in Amazon CloudWatch console.\", mdx(\"img\", {\n    src: img13,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"div\", {\n    style: {\n      \"height\": \"40px\"\n    }\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Notes\"), \"\\nAfter you\\u2019ve finished the tutorial, remember to shut down the new EKS cluster created in the tutorial in order to avoid additional charges.\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Create IAM policy"},{"depth":2,"value":"Attach the EKS-AWSObservability IAM Policy to worker node"},{"depth":2,"value":"Deploy ADOT Collector on Amazon EKS as sidecar"}]}},"pageContext":{"slug":"/docs/setup/eks/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/setup/eks.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}
{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/lambda",
    "result": {"data":{"mdx":{"id":"9cc4c114-e30b-5c05-b0b7-f4ccf3100fed","excerpt":"The AWS Distro for OpenTelemetry now supports AWS managed Lambda layers.\n     AWS managed Lambda layers for ADOT provides a plug-and-play user experience byâ€¦","fields":{"slug":"/docs/getting-started/lambda/"},"frontmatter":{"title":"AWS Distro for OpenTelemetry Lambda","description":"The AWS Distro for OpenTelemetry now supports AWS managed Lambda layers. ADOT Lambda layers for AWS Lambda provides a plug and play user experience by automatically instrumenting a Lambda function, by packaging OpenTelemetry together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray in an easy to setup  layer. Users can enable and disable OpenTelemetry for their Lambda function without changing code.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AWS Distro for OpenTelemetry Lambda\",\n  \"description\": \"The AWS Distro for OpenTelemetry now supports AWS managed Lambda layers. ADOT Lambda layers for AWS Lambda provides a plug and play user experience by automatically instrumenting a Lambda function, by packaging OpenTelemetry together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray in an easy to setup  layer. Users can enable and disable OpenTelemetry for their Lambda function without changing code.\",\n  \"path\": \"/docs/getting-started/lambda\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The AWS Distro for OpenTelemetry now supports AWS managed Lambda layers.\\nAWS managed Lambda layers for ADOT provides a plug-and-play user experience by automatically\\ninstrumenting a Lambda function, by packaging OpenTelemetry together with an out-of-the-box configuration\\nfor AWS Lambda and AWS X-Ray in an easy to setup layer. Users can enable and disable OpenTelemetry\\nfor their Lambda function without changing code.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"getting-started-with-aws-lambda-layers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#getting-started-with-aws-lambda-layers\",\n    \"aria-label\": \"getting started with aws lambda layers permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting Started with AWS Lambda layers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/getting-started/lambda/lambda-java\"\n  }, \"AWS managed Lambda layer for ADOT Java SDK and ADOT Collector\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/getting-started/lambda/lambda-java-auto-instr\"\n  }, \"AWS managed Lambda Layer for ADOT Java Auto-instrumentation Agent and ADOT Collector\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/getting-started/lambda/lambda-js\"\n  }, \"AWS managed Lambda Layer for ADOT JavaScript SDK and ADOT Collector\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/getting-started/lambda/lambda-python\"\n  }, \"AWS managed Lambda Layer for ADOT Python SDK and ADOT Collector\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/getting-started/lambda/lambda-dotnet\"\n  }, \"AWS managed Lambda Layer for ADOT Collector and ADOT Lambda .NET SDK (Manual Instrumentation)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/getting-started/lambda/lambda-go\"\n  }, \"AWS managed Lambda Layer for ADOT Collector and ADOT Lambda Go SDK (Manual Instrumentation)\"))), mdx(\"h2\", {\n    \"id\": \"manual-steps-for-private-lambda-layers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#manual-steps-for-private-lambda-layers\",\n    \"aria-label\": \"manual steps for private lambda layers permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Manual Steps for Private Lambda Layers\"), mdx(\"p\", null, \"See the documentation on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-lambda/\"\n  }, \"OpenTelemetry Lambda repository\"), \".\"), mdx(\"h2\", {\n    \"id\": \"custom-configuration-for-the-adot-collector-on-lambda\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#custom-configuration-for-the-adot-collector-on-lambda\",\n    \"aria-label\": \"custom configuration for the adot collector on lambda permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Custom configuration for the ADOT Collector on Lambda\"), mdx(\"p\", null, \"The ADOT Lambda layers combines both OpenTelemetry and the ADOT Collector.\\nThe configuration of the ADOT Collector follows the OpenTelemetry standard.\\nBy default, the ADOT Lambda layer uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/adot/collector/config.yaml\"\n  }, \"config.yaml\"), \",\\nwhich exports telemetry data to AWS X-Ray.\"), mdx(\"p\", null, \"To enable debugging, you can use the configuration file to set log level to debug. See the example below.\"), mdx(\"p\", null, \"To customize the collector configuration, add a configuration yaml file to your function code.\\nOnce the file has been deployed with a Lambda function, create an environment variable on your Lambda\\nfunction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OPENTELEMETRY_COLLECTOR_CONFIG_FILE\"), \" and set it to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/var/task/*<path/<to>/<filename>*\"), \".\\nThis will tell the extension where to find the collector configuration.\"), mdx(\"p\", null, \"Here is a sample configuration file, collector.yaml in the root directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"#collector.yaml in the root directory\\n#Set an environemnt variable 'OPENTELEMETRY_COLLECTOR_CONFIG_FILE' to '/var/task/collector.yaml'\\n\\nreceivers:\\n  otlp:\\n    protocols:\\n      grpc:\\n      http:\\n\\nexporters:\\n  logging:\\n    loglevel: debug\\n  awsxray:\\n\\n#enables output for traces to xray\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [logging, awsxray]\\n\")), mdx(\"p\", null, \"You can set this via the Lambda console, or via the AWS CLI.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"aws lambda update-function-configuration --function-name Function --environment Variables={OPENTELEMETRY_COLLECTOR_CONFIG_FILE=/var/task/collector.yaml}\\n\")), mdx(\"p\", null, \"As an alternative to uploading your collector.yaml file directly with your code, you can zip your file and upload your zip as a separate Lambda layer.\\nYou can set this via the Lambda console, or via the AWS CLI.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"aws lambda update-function-configuration --function-name Function --environment Variables={OPENTELEMETRY_COLLECTOR_CONFIG_FILE=/opt/collector.yaml}\\n\")), mdx(\"p\", null, \"You can configure environment variables via CloudFormation template as well:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"Function:\\n  Type: AWS::Serverless::Function\\n  Properties:\\n    ...\\n    Environment:\\n      Variables:\\n        OPENTELEMETRY_COLLECTOR_CONFIG_FILE: /var/task/collector.yaml\\n\")), mdx(\"p\", null, \"For more information about ADOT Collector configuration,\\nsuch as adding ca/cert/key files, see the Github \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/extensions/sample-aoc-config/README.md\"\n  }, \"README.md\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Getting Started with AWS Lambda layers"},{"depth":2,"value":"Manual Steps for Private Lambda Layers"},{"depth":2,"value":"Custom configuration for the ADOT Collector on Lambda"}]}},"pageContext":{"slug":"/docs/getting-started/lambda/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/lambda.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}